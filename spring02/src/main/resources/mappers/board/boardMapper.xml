<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="board">
<!-- 새로운 첨부파일 추가 -->	
	<insert id="updateAttach">
		insert into attach (fileSize,fullName, bno) values
		( #{fileSize}, #{fullName}, #{bno} )
	</insert>

<!-- 게시물 내용 수정 -->
	<update id="update">
		update board
		set title=#{title}, content=#{content}
		where bno=#{bno}
	</update>

<!-- 첨부파일 레코드 삭제 -->
	<delete id="deleteFile">
		delete from attach
		where fullName=#{fullName}
	</delete>
	
	<delete id="delete">
 		delete from board where bno=#{bno}
<!--  		update board set show='N' where bno=#{bno}  -->
	</delete>

<!-- 첨부파일 정보 저장 -->	
	<insert id="addAttach">
		insert into attach (
		fullName, bno, fileSize
		) values ( 
		#{fullName}, (SELECT MAX(bno) from board), #{fileSize} ) 
		<!-- currval 은 현재 시퀀스의 값을 의미한다 -->
	</insert>

<!-- 첨부파일 목록 -->
	<select id="getAttach" 	resultType="java.util.HashMap">
		select filesize,fullname from attach
		where bno=#{bno}
		order by regdate desc	
	</select>



	<select id="listAll"
resultType="com.example.spring02.model.board.dto.BoardDTO">
		<include refid="pagingHeader" />
			SELECT rownum, bno, title, user_name, (select to_char(regdate, 'yyyy-mm-dd hh12:mi:ss') from board where bno=b.bno) regdate, 
			viewcnt,
			(select count(*) from reply 
			where bno=b.bno) cnt
        	FROM board b, member m, admin a
			<include refid="search" />
			order by bno desc,regdate desc  
		<include refid="pagingFooter" />
	</select>
	
	<!-- 페이징 sql -->
<sql id="pagingHeader">
    SELECT * FROM (
        SELECT ROWNUM AS rn, A.* FROM (
</sql>
<sql id="pagingFooter">
        ) A
    ) WHERE rn BETWEEN #{start} AND #{end}
</sql>

<!-- 레코드 갯수 계산 -->	
	<select id="countArticle" resultType="int">
		select count(*)
		from board b, member m, admin a
		<include refid="search" />
	</select>
	
	<sql id="search">
		<!-- <choose>
			<when test="search_option != 'all' ">
				where b.writer=m.userid or b.writer=a.userid
				and
				${search_option} like #{keyword}
			</when>
			<otherwise>
				where b.writer=m.userid or b.writer=a.userid
				and (b.user_name like #{keyword}
				or b.title like #{keyword}
				or b.content like #{keyword})
			</otherwise>
		</choose> -->
		<if test="search_option == 'user_name'">
			where b.writer=m.userid or b.writer=a.userid
			and
			b.user_name like #{keyword}
		</if>
		<if test="search_option == 'content'">
			where b.writer=m.userid or b.writer=a.userid
			and
			b.content like #{keyword}
		</if>
		<if test="search_option == 'title'">
			where b.writer=m.userid or b.writer=a.userid
			and
			b.title like #{keyword}
		</if>
		<if test="search_option == 'all'">
			where b.writer=m.userid or b.writer=a.userid
				and (b.user_name like #{keyword}
				or b.title like #{keyword}
				or b.content like #{keyword})
		</if>
	</sql>
	
	<insert id="insert">
		insert into board (bno,title,content,writer,user_name) values
		( SEQ_BOARD.NEXTVAL , #{title}, #{content}, #{writer}, #{user_name} )
	</insert>

	<!-- 조회수 증가 처리 -->
	<update id="increaseViewcnt">
		update board set viewcnt=viewcnt+1
		where bno=#{bno}
	</update>
	
	<select id="read" 
resultType="com.example.spring02.model.board.dto.BoardDTO">
		select bno,title,(select to_char(regdate, 'yyyy-mm-dd hh12:mi:ss') from board where bno=b.bno) regdate,content,viewcnt,user_name,writer 
		from board b, member m, admin a
		where (b.writer=m.userid or b.writer=a.userid) and b.bno=#{bno}

	</select>
	
</mapper>














